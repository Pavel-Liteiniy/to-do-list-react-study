{"version":3,"sources":["const.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item-panel/index.js","components/add-item-panel/add-item-panel.js","components/app/app.js","components/app/index.js","index.js"],"names":["Filter","EventType","AppHeader","toDo","done","className","SearchPanel","searchRequest","searchHandler","type","placeholder","onChange","evt","target","value","ListItemState","TodoListItem","this","props","label","eventHandler","listItemEventHandler","important","labelClassList","onClick","Component","TodoList","tasks","appEventHandler","elements","map","task","id","taskProps","data","ItemStatusFilter","buttons","name","filterSelected","filterHandler","buttonName","buttonText","nanoid","AddItemPanel","state","_callback","submit","_onLabelChange","setState","_addTask","_onAddItemPanelSubmit","preventDefault","onSubmit","required","deleteItem","items","index","slice","updateItem","update","App","_updateTasks","findIndex","_changeFilterType","newfilterType","_changeSearchRequest","newSearchRequest","_filterTasks","filter","length","toLowerCase","includes","unfilteredTasks","filteredTasks","_getDoneTaskCount","doneTaskCount","forEach","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.885f113b.chunk.js","sourcesContent":["export const Filter = {\n  ALL: `all`,\n  ACTIVE: `active`,\n  DONE: `done`,\n}\n\nexport const EventType = {\n  DELETE: `delete`,\n  ADD: `add`,\n  UPDATE: `update`,\n}\n","import AppHeader from './app-header'\n\nexport default AppHeader\n","import React from 'react'\nimport './app-header.css'\n\nconst AppHeader = ( { toDo, done } ) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <p>{ toDo } more to do, { done } done</p>\n    </div>\n  )\n}\n\nexport default AppHeader\n","import SearchPanel from './search-panel'\n\nexport default SearchPanel\n","import React from 'react'\n\nimport './search-panel.css'\n\nconst SearchPanel = ( { searchRequest, searchHandler } ) => {\n  return (\n    <input type=\"text\"\n      className=\"form-control search-input\"\n      placeholder=\"type to search\"\n      onChange={ ( evt ) => searchHandler( evt.target.value ) }\n      value={ searchRequest } />\n  )\n}\n\nexport default SearchPanel\n","import React, { Component } from 'react'\n\nimport { EventType } from '../../const'\n\nimport './todo-list-item.css'\n\nconst ListItemState = {\n  DEFAULT: `todo-list-item`,\n  IMPORTANT: `important`,\n  DONE: `done`,\n}\n\nexport default class TodoListItem extends Component {\n  render() {\n    const { label, listItemEventHandler: eventHandler, important = false, done = false } = this.props\n\n    let labelClassList = ListItemState.DEFAULT\n\n    if ( important ) {\n      labelClassList += ` ${ListItemState.IMPORTANT}`\n    }\n\n    if ( done ) {\n      labelClassList += ` ${ListItemState.DONE}`\n    }\n\n    return (\n      <div className={ labelClassList }>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={ () => eventHandler( EventType.UPDATE, { done: !done } ) }>\n          { label }\n        </span>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={ () => eventHandler( EventType.UPDATE, { important: !important } ) }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={ () => eventHandler( EventType.DELETE ) }>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </div>\n    )\n  }\n}\n","import TodoListItem from './todo-list-item'\n\nexport default TodoListItem\n","import TodoList from './todo-list'\n\nexport default TodoList\n","import React from 'react'\n\nimport TodoListItem from '../todo-list-item'\nimport './todo-list.css'\n\nconst TodoList = ( { tasks, appEventHandler: eventHandler } ) => {\n\n  const elements = tasks.map( ( task ) => {\n    const { id, ...taskProps } = task\n\n    return (\n      <li key={ id } className=\"list-group-item\">\n        <TodoListItem\n          { ...taskProps }\n          listItemEventHandler={ ( type, data = {} ) => eventHandler( type, { id, ...taskProps, ...data } ) } />\n      </li>\n    )\n  } )\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  )\n}\n\nexport default TodoList\n","import ItemStatusFilter from './item-status-filter'\n\nexport default ItemStatusFilter\n","import React, { Component } from 'react'\nimport { nanoid } from 'nanoid'\n\nimport { Filter } from '../../const'\n\nimport './item-status-filter.css'\n\nexport default class ItemStatusFilter extends Component {\n  buttons = [\n    {\n      name: Filter.ALL,\n      label: `All`\n    },\n    {\n      name: Filter.ACTIVE,\n      label: `Active`\n    },\n    {\n      name: Filter.DONE,\n      label: `Done`\n    },\n  ]\n\n  render() {\n    const { filterSelected, filterHandler } = this.props\n\n    const buttons = this.buttons.map( ( { name: buttonName, label: buttonText } ) => {\n      return (\n        <button type=\"button\"\n          className={ `btn${filterSelected === buttonName ? ` btn-info` : ` btn-outline-secondary`}` }\n          onClick={ ( evt ) => { filterHandler( buttonName ) } }\n          key={ nanoid() }>\n          { buttonText }\n        </button>\n      )\n    } )\n\n    return (\n      <div className=\"btn-group\">\n        { buttons }\n      </div>\n    )\n  }\n}\n","import AddItemPanel from './add-item-panel'\n\nexport default AddItemPanel\n","import React, { Component } from 'react'\nimport { nanoid } from 'nanoid'\n\nimport { EventType } from '../../const'\n\nimport './add-item-panel.css'\n\nexport default class AddItemPanel extends Component {\n  state = {\n    label: ``\n  }\n\n  _callback = {\n    submit: this.props.appEventHandler\n  }\n\n  render() {\n    return (\n      <form\n        className='item-add-form d-flex'\n        onSubmit={ this._onAddItemPanelSubmit }>\n\n        <input type='text'\n          className='form-control'\n          onChange={ this._onLabelChange }\n          placeholder='type to add task'\n          value={ this.state.label }\n          required />\n\n        <button\n          type='submit'\n          className='btn btn-outline-secondary'>\n          Add&nbsp;task\n        </button>\n\n      </form>\n    )\n  }\n\n  _onLabelChange = ( evt ) => {\n    this.setState( { label: evt.target.value } )\n  }\n\n  _addTask = ( { label } ) => {\n    return {\n      id: nanoid(),\n      label,\n      important: false,\n    }\n  }\n\n  _onAddItemPanelSubmit = ( evt ) => {\n    evt.preventDefault()\n    this._callback.submit( EventType.ADD, this._addTask( this.state ) )\n\n    this.setState( { label: `` } )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { EventType, Filter } from '../../const'\n\nimport AppHeader from '../app-header'\nimport SearchPanel from '../search-panel'\nimport TodoList from '../todo-list'\nimport ItemStatusFilter from '../item-status-filter'\nimport AddItemPanel from '../add-item-panel'\nimport './app.css'\n\nconst deleteItem = ( items, index ) => {\n  if ( index === -1 ) {\n    return items\n  }\n  return [\n    ...items.slice( 0, index ),\n    ...items.slice( index + 1 )\n  ]\n}\n\nconst updateItem = ( items, update, index ) => {\n  if ( index === -1 ) {\n    return items\n  }\n\n  return [\n    ...items.slice( 0, index ),\n    update,\n    ...items.slice( index + 1 )\n  ]\n}\n\nexport default class App extends Component {\n  state = {\n    tasks: this.props.data,\n    filterSelected: Filter.ALL,\n    searchRequest: ``,\n  }\n\n  render() {\n    const { tasks: unfilteredTasks, filterSelected, searchRequest } = this.state;\n    const filteredTasks = this._filterTasks( unfilteredTasks );\n\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={ unfilteredTasks.length } done={ this._getDoneTaskCount( unfilteredTasks ) } />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            searchRequest={ searchRequest }\n            searchHandler={ ( newSearchRequest ) => { this._changeSearchRequest( newSearchRequest ) } } />\n          <ItemStatusFilter\n            filterSelected={ filterSelected }\n            filterHandler={ ( newfilterType ) => { this._changeFilterType( newfilterType ) } } />\n        </div>\n        <TodoList\n          tasks={ filteredTasks }\n          appEventHandler={ ( type, data ) => this._updateTasks( type, data ) } />\n        <AddItemPanel\n          appEventHandler={ ( type, data ) => this._updateTasks( type, data ) } />\n      </div>\n    )\n  }\n\n  _updateTasks = ( type, data ) => {\n    switch ( type ) {\n      case EventType.DELETE:\n        this.setState( ( { tasks } ) => {\n          const index = tasks.findIndex( ( task ) => {\n            return task.id === data.id\n          } )\n          const updatedTasks = deleteItem( tasks, index )\n          return { tasks: updatedTasks }\n        } )\n        break\n      case EventType.ADD:\n        this.setState( ( { tasks } ) => {\n          const updatedTasks = [ ...tasks, data ]\n          return { tasks: updatedTasks }\n        } )\n        break\n      case EventType.UPDATE:\n        this.setState( ( { tasks } ) => {\n          const index = tasks.findIndex( ( task ) => {\n            return task.id === data.id\n          } )\n          const updatedTasks = updateItem( tasks, data, index )\n          return { tasks: updatedTasks }\n        } )\n        break\n    }\n  }\n\n  _changeFilterType = ( newfilterType ) => {\n    this.setState( { filterSelected: newfilterType } )\n  }\n\n  _changeSearchRequest = ( newSearchRequest ) => {\n    this.setState( { searchRequest: newSearchRequest } )\n  }\n\n  _filterTasks = ( tasks ) => {\n    return tasks.filter( ( task ) => {\n      const { filterSelected, searchRequest } = this.state\n\n      if ( searchRequest.length > 0 && !task.label.toLowerCase().includes( searchRequest.toLowerCase() ) ) {\n        return false\n      }\n\n      switch ( filterSelected ) {\n        case Filter.ALL:\n          return true\n        case Filter.ACTIVE:\n          return !task.done\n        case Filter.DONE:\n          return task.done\n        default:\n          return true\n      }\n    } )\n  }\n\n  _getDoneTaskCount( tasks ) {\n    let doneTaskCount = 0;\n\n    tasks.forEach( task => {\n      if ( task.done ) {\n        doneTaskCount++\n      }\n    } )\n\n    return doneTaskCount\n  }\n}\n","import App from './app'\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app'\n\nconst tasks = [\n  { label: 'Drink Coffee', important: false, id: 1 },\n  { label: 'Make Awesome App', important: true, id: 2 },\n  { label: 'Have a lunch', important: false, id: 3 }\n]\n\nReactDOM.render( <App data={ tasks.slice() } />,\n  document.getElementById( 'root' ) )\n"],"sourceRoot":""}